package br.com.unicuritiba;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

public class Main {

    public static void main(String[] args) {
        String diretorioRaiz = "C:\\Program Files (x86)"; 
        String nomeArquivoProcurado = "ExtExport.exe"; 

        List<String> arquivosEncontrados = buscarArquivo(diretorioRaiz, nomeArquivoProcurado);

        if (arquivosEncontrados.isEmpty()) {
            System.out.println("Nenhum arquivo encontrado.");
        } else {
            System.out.println("Arquivos encontrados:");
            for (String caminho : arquivosEncontrados) {
                System.out.println(caminho);
            }
        }
    }

    private static List<String> buscarArquivo(String diretorio, String nomeArquivoProcurado) {
        List<String> arquivosEncontrados = new ArrayList<>();
        File pasta = new File(diretorio);

        if (pasta.exists() && pasta.isDirectory()) {
            System.out.println("Iniciando busca no diretório: " + pasta.getAbsolutePath());
            buscarArquivoRecursivo(pasta, nomeArquivoProcurado, arquivosEncontrados);
        } else {
            System.out.println("O diretório especificado não existe ou não é um diretório válido.");
        }

        return arquivosEncontrados;
    }

    private static void buscarArquivoRecursivo(File diretorio, String nomeArquivoProcurado, List<String> arquivosEncontrados) {
        File[] arquivos = diretorio.listFiles();
        
        if (arquivos != null) {
            for (File arquivo : arquivos) {
                if (arquivo.isFile() && arquivo.getName().equalsIgnoreCase(nomeArquivoProcurado)) {
                    System.out.println("Arquivo encontrado: " + arquivo.getAbsolutePath());
                    arquivosEncontrados.add(arquivo.getAbsolutePath());
                } else if (arquivo.isDirectory()) {
                    System.out.println("Verificando diretório: " + arquivo.getAbsolutePath());
                    buscarArquivoRecursivo(arquivo, nomeArquivoProcurado, arquivosEncontrados);
                }
            }
        } 
    }
}
